// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NuGetFeedTemplate.Data;

namespace NuGetFeedTemplate.Migrations
{
    [DbContext(typeof(FeedContext))]
    [Migration("20210510035917_PackageGroups")]
    partial class PackageGroups
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.AuthToken", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<string>("Description")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTimeOffset>("Expires")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("DATEADD(year, 1, SYSDATETIMEOFFSET())");

                    b.Property<bool>("Revoked")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Key");

                    b.HasIndex("UserEmail");

                    b.ToTable("AuthTokens");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.PackageDownload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthTokenKey")
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTimeOffset>("Downloaded")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthTokenKey");

                    b.ToTable("Downloads");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.PackageGroup", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Name");

                    b.ToTable("PackageGroups");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.PackageGroupMember", b =>
                {
                    b.Property<string>("PackageGroupName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PackageId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PackageGroupName", "PackageId");

                    b.ToTable("PackageGroupMembers");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.PackageGroupSyndication", b =>
                {
                    b.Property<string>("PackageGroupName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PublishTargetName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PackageGroupName", "PublishTargetName");

                    b.HasIndex("PublishTargetName");

                    b.ToTable("Syndications");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.PublishTarget", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApiToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Legacy")
                        .HasColumnType("bit");

                    b.Property<string>("PublishEndpoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.HasKey("Name");

                    b.ToTable("PublishTargets");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PackagePublisher")
                        .HasColumnType("bit");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.AuthToken", b =>
                {
                    b.HasOne("NuGetFeedTemplate.Data.Models.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserEmail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.PackageDownload", b =>
                {
                    b.HasOne("NuGetFeedTemplate.Data.Models.AuthToken", "AuthToken")
                        .WithMany("Downloads")
                        .HasForeignKey("AuthTokenKey");

                    b.Navigation("AuthToken");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.PackageGroupMember", b =>
                {
                    b.HasOne("NuGetFeedTemplate.Data.Models.PackageGroup", "PackageGroup")
                        .WithMany("Members")
                        .HasForeignKey("PackageGroupName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageGroup");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.PackageGroupSyndication", b =>
                {
                    b.HasOne("NuGetFeedTemplate.Data.Models.PackageGroup", "PackageGroup")
                        .WithMany("Syndications")
                        .HasForeignKey("PackageGroupName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NuGetFeedTemplate.Data.Models.PublishTarget", "PublishTarget")
                        .WithMany("PackageGroups")
                        .HasForeignKey("PublishTargetName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageGroup");

                    b.Navigation("PublishTarget");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.AuthToken", b =>
                {
                    b.Navigation("Downloads");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.PackageGroup", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Syndications");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.PublishTarget", b =>
                {
                    b.Navigation("PackageGroups");
                });

            modelBuilder.Entity("NuGetFeedTemplate.Data.Models.User", b =>
                {
                    b.Navigation("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
